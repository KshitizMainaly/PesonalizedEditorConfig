
local wezterm = require("wezterm")
local act = wezterm.action
local config = wezterm.config_builder() or {}

-- =========================
-- Window & Appearance
-- =========================
config.window_decorations = "RESIZE"        -- keep titlebar & resize borders

-- my default shell
config.default_prog = {"pwsh.exe", "-NoLogo"}

-- config.default_prog = {"cmd.exe"}


-- Frosted glass / Mica effect
config.window_background_opacity = 0.85      -- fully transparent to show Mica
config.text_background_opacity = 1.0        -- keep text readable
-- mica is also good but arylic is more blurry and transparent
-- config.win32_system_backdrop = "Mica"       -- frosted glass effect

config.win32_system_backdrop = "Acrylic"  -- More blur, less system integration


-- =========================
-- Font
-- =========================
config.font = wezterm.font_with_fallback({
    "Maple Mono NF",
    "JetBrains Mono NL",
    "Cascadia Code"
})
config.font_size = 14

-- =========================
-- Colors & Tab Bar
-- =========================
config.color_scheme = "Catppuccin Macchiato"

-- config.color_scheme = "tokyonight"
-- config.color_scheme = "tokyonight"
-- config.color_scheme = "One Dark"

config.window_padding = {
  left = 20,
  right = 20,
  top = 20,
  bottom = 20,
}
config.window_frame = {
  border_left_width = "0.4cell",
  border_right_width = "0.4cell",
  border_bottom_height = "0.15cell",
  border_top_height = "0.15cell",
}
config.hide_tab_bar_if_only_one_tab = true
config.tab_bar_at_bottom = true
config.use_fancy_tab_bar = false

-- =========================
-- Leader Key
-- =========================
config.leader = { key = "Space", mods = "CTRL", timeout_milliseconds = 1000 }
-- =========================
-- Keybindings
-- =========================
config.keys = {

-- Tabs

  { mods = "LEADER", key = "s", action = act.PaneSelect {
      mode = "SwapWithActive",
  }},
  { mods = "LEADER", key = "c", action = act.SpawnTab("CurrentPaneDomain") },
  { mods = "LEADER", key = "x", action = act.CloseCurrentPane({ confirm = false }) },
  { mods = "LEADER", key = "b", action = act.ActivateTabRelative(-1) },
  { mods = "LEADER", key = "n", action = act.ActivateTabRelative(1) },

  -- Rename tab
  { mods = "LEADER", key = "r", action = act.PromptInputLine {
      description = "Rename tab",
      action = wezterm.action_callback(function(window, pane, line)
        if line then
          window:active_tab():set_title(line)
        end
      end),
  }},

  -- Switch workspace
  { mods = "LEADER", key = "w", action = act.ShowLauncherArgs { flags = "WORKSPACES" } },

  -- Close tab
  { mods = "LEADER", key = "q", action = act.CloseCurrentTab{confirm=false} },

  -- Tab navigator
  { mods = "LEADER", key = "t", action = act.ShowTabNavigator },

  -- Split panes (CORRECTED for CWD inheritance)
  { mods = "LEADER", key = "\\", action = act.SplitHorizontal({ domain = "CurrentPaneDomain" }) },
  { mods = "LEADER", key = "-", action = act.SplitVertical({ domain = "CurrentPaneDomain" }) },

  -- Navigation
  { mods = "LEADER", key = "h", action = act.ActivatePaneDirection("Left") },
  { mods = "LEADER", key = "j", action = act.ActivatePaneDirection("Down") },
  { mods = "LEADER", key = "k", action = act.ActivatePaneDirection("Up") },
  { mods = "LEADER", key = "l", action = act.ActivatePaneDirection("Right") },

  -- Resize panes
  { mods = "LEADER|SHIFT", key = "h", action = act.AdjustPaneSize({ "Left", 5 }) },
  { mods = "LEADER|SHIFT", key = "l", action = act.AdjustPaneSize({ "Right", 5 }) },
  { mods = "LEADER|SHIFT", key = "j", action = act.AdjustPaneSize({ "Down", 5 }) },
  { mods = "LEADER|SHIFT", key = "k", action = act.AdjustPaneSize({ "Up", 5 }) },

  -- Command palette
  { mods = "LEADER", key = "p", action = act.ActivateCommandPalette },

  -- Reload config
  { mods = "CTRL|SHIFT", key = "R", action = act.ReloadConfiguration },

  -- Copy/paste
  { mods = "CTRL|SHIFT", key = "C", action = act.CopyTo("Clipboard") },
  { mods = "CTRL|SHIFT", key = "V", action = act.PasteFrom("Clipboard") },
}

-- Tabs 1-9
for i = 1, 9 do
  table.insert(config.keys, {
    key = tostring(i),
    mods = "LEADER",
    action = act.ActivateTab(i - 1),
  })
end

-- =========================
-- Cursor & Pane
-- =========================
config.default_cursor_style = "BlinkingBar"

-- Keep split panes in same CWD
wezterm.on("split-pane", function(window, pane)
    return { cwd = pane:get_current_working_dir() }
end)

return config
